<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mallcai.fulfillment.pe.infrastructure.mapper.FrozenGoodSumPoMapper">
  <resultMap id="BaseResultMap" type="com.mallcai.fulfillment.pe.infrastructure.valueobject.FrozenGoodSumPo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="good_id" jdbcType="INTEGER" property="goodId" />
    <result column="good_sum" jdbcType="DECIMAL" property="goodSum" />
    <result column="sum_date" jdbcType="VARCHAR" property="sumDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="city_product_id" jdbcType="INTEGER" property="cityProductId" />
    <result column="product_sum" jdbcType="DECIMAL" property="productSum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, city_id, store_id, good_id, good_sum, sum_date, create_time, city_product_id, 
    product_sum
  </sql>
  <select id="selectByExample" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.FrozenGoodSumPoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from frozen_good_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from frozen_good_summary
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from frozen_good_summary
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.FrozenGoodSumPoCriteria">
    delete from frozen_good_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.FrozenGoodSumPo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into frozen_good_summary (city_id, store_id, good_id, 
      good_sum, sum_date, create_time, 
      city_product_id, product_sum)
    values (#{cityId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, 
      #{goodSum,jdbcType=DECIMAL}, #{sumDate,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{cityProductId,jdbcType=INTEGER}, #{productSum,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.FrozenGoodSumPo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into frozen_good_summary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        city_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="goodId != null">
        good_id,
      </if>
      <if test="goodSum != null">
        good_sum,
      </if>
      <if test="sumDate != null">
        sum_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="cityProductId != null">
        city_product_id,
      </if>
      <if test="productSum != null">
        product_sum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="goodSum != null">
        #{goodSum,jdbcType=DECIMAL},
      </if>
      <if test="sumDate != null">
        #{sumDate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityProductId != null">
        #{cityProductId,jdbcType=INTEGER},
      </if>
      <if test="productSum != null">
        #{productSum,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.FrozenGoodSumPoCriteria" resultType="java.lang.Long">
    select count(*) from frozen_good_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update frozen_good_summary
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.goodId != null">
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.goodSum != null">
        good_sum = #{record.goodSum,jdbcType=DECIMAL},
      </if>
      <if test="record.sumDate != null">
        sum_date = #{record.sumDate,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cityProductId != null">
        city_product_id = #{record.cityProductId,jdbcType=INTEGER},
      </if>
      <if test="record.productSum != null">
        product_sum = #{record.productSum,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update frozen_good_summary
    set id = #{record.id,jdbcType=BIGINT},
      city_id = #{record.cityId,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=INTEGER},
      good_id = #{record.goodId,jdbcType=INTEGER},
      good_sum = #{record.goodSum,jdbcType=DECIMAL},
      sum_date = #{record.sumDate,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      city_product_id = #{record.cityProductId,jdbcType=INTEGER},
      product_sum = #{record.productSum,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.FrozenGoodSumPo">
    update frozen_good_summary
    <set>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="goodSum != null">
        good_sum = #{goodSum,jdbcType=DECIMAL},
      </if>
      <if test="sumDate != null">
        sum_date = #{sumDate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityProductId != null">
        city_product_id = #{cityProductId,jdbcType=INTEGER},
      </if>
      <if test="productSum != null">
        product_sum = #{productSum,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.FrozenGoodSumPo">
    update frozen_good_summary
    set city_id = #{cityId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=INTEGER},
      good_sum = #{goodSum,jdbcType=DECIMAL},
      sum_date = #{sumDate,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      city_product_id = #{cityProductId,jdbcType=INTEGER},
      product_sum = #{productSum,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.FrozenGoodSumPoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from frozen_good_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>