<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mallcai.fulfillment.pe.infrastructure.mapper.ProduceOrderItemDOMapper">
  <resultMap id="BaseResultMap" type="com.mallcai.fulfillment.pe.infrastructure.valueobject.ProduceOrderItemDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="produce_order_no" jdbcType="VARCHAR" property="produceOrderNo" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="warehouse_id" jdbcType="INTEGER" property="warehouseId" />
    <result column="good_id" jdbcType="VARCHAR" property="goodId" />
    <result column="city_product_id" jdbcType="INTEGER" property="cityProductId" />
    <result column="total_num" jdbcType="DECIMAL" property="totalNum" />
    <result column="good_unit" jdbcType="VARCHAR" property="goodUnit" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, produce_order_no, store_id, city_id, warehouse_id, good_id, city_product_id,
    total_num, good_unit, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.ProduceOrderItemDOCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from produce_order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from produce_order_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from produce_order_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.ProduceOrderItemDO">
    insert into produce_order_item (produce_order_no, store_id,
      city_id, warehouse_id,
      good_id, city_product_id, total_num,
      good_unit, create_time, update_time
      )
    values (#{item.produceOrderNo,jdbcType=VARCHAR}, #{item.storeId,jdbcType=INTEGER},
    #{item.cityId,jdbcType=INTEGER}, #{item.warehouseId,jdbcType=INTEGER},

    <choose>
      <when test="goodId!=null">
        #{goodId,jdbcType=VARCHAR},
      </when>
      <otherwise>
        '',
      </otherwise>
    </choose>

    <choose>
      <when test="cityProductId!=null">
        #{cityProductId,jdbcType=INTEGER},
      </when>
      <otherwise>
        0,
      </otherwise>
    </choose>
    #{totalNum,jdbcType=DECIMAL},
    <choose>
      <when test="goodUnit!=null">
        #{goodUnit,jdbcType=VARCHAR},
      </when>
      <otherwise>
        '',
      </otherwise>
    </choose>
    now(),now())
  </insert>
  <insert id="insertSelective" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.ProduceOrderItemDO">
    insert into produce_order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="produceOrderNo != null">
        produce_order_no,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="warehouseId != null">
        warehouse_id,
      </if>
      <if test="goodId != null">
        good_id,
      </if>
      <if test="cityProductId != null">
        city_product_id,
      </if>
      <if test="totalNum != null">
        total_num,
      </if>
      <if test="goodUnit != null">
        good_unit,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="produceOrderNo != null">
        #{produceOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="warehouseId != null">
        #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="goodId != null">
        #{goodId,jdbcType=VARCHAR},
      </if>
      <if test="cityProductId != null">
        #{cityProductId,jdbcType=INTEGER},
      </if>
      <if test="totalNum != null">
        #{totalNum,jdbcType=DECIMAL},
      </if>
      <if test="goodUnit != null">
        #{goodUnit,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.ProduceOrderItemDO">
    update produce_order_item
    <set>
      <if test="produceOrderNo != null">
        produce_order_no = #{produceOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="warehouseId != null">
        warehouse_id = #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        good_id = #{goodId,jdbcType=VARCHAR},
      </if>
      <if test="cityProductId != null">
        city_product_id = #{cityProductId,jdbcType=INTEGER},
      </if>
      <if test="totalNum != null">
        total_num = #{totalNum,jdbcType=DECIMAL},
      </if>
      <if test="goodUnit != null">
        good_unit = #{goodUnit,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mallcai.fulfillment.pe.infrastructure.valueobject.ProduceOrderItemDO">
    update produce_order_item
    set produce_order_no = #{produceOrderNo,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      warehouse_id = #{warehouseId,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=VARCHAR},
      city_product_id = #{cityProductId,jdbcType=INTEGER},
      total_num = #{totalNum,jdbcType=DECIMAL},
      good_unit = #{goodUnit,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="batchInsertSelective" parameterType="java.util.List">
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into produce_order_item (produce_order_no, store_id,
    city_id, warehouse_id,
    good_id, city_product_id, total_num,
    good_unit, create_time, update_time
    )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.produceOrderNo,jdbcType=VARCHAR}, #{item.storeId,jdbcType=INTEGER},
      #{item.cityId,jdbcType=INTEGER}, #{item.warehouseId,jdbcType=INTEGER},

      <choose>
        <when test="item.goodId!=null">
          #{item.goodId,jdbcType=VARCHAR},
        </when>
        <otherwise>
          '',
        </otherwise>
      </choose>

      <choose>
        <when test="item.cityProductId!=null">
          #{item.cityProductId,jdbcType=INTEGER},
        </when>
        <otherwise>
          0,
        </otherwise>
      </choose>
      #{item.totalNum,jdbcType=DECIMAL},
      <choose>
        <when test="item.goodUnit!=null">
          #{item.goodUnit,jdbcType=VARCHAR},
        </when>
        <otherwise>
          '',
        </otherwise>
      </choose>
      now(),now())
    </foreach>
  </insert>
</mapper>